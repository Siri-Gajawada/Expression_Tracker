{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sirig\\\\OneDrive\\\\Desktop\\\\ps\\\\expression_tracker(leela)\\\\client\\\\src\\\\components\\\\GameComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './GameComponent.css';\nimport ImageCapture from './ImageCaptureComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shapes = ['circle', 'square', 'triangle'];\nfunction GameComponent() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [sessionId, setSessionId] = useState(null);\n  const [isGameActive, setIsGameActive] = useState(true); // Controls image capture\n\n  // Function to request a new session ID from the server\n  const startSession = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/start-session');\n      const data = await response.json();\n      setSessionId(data.sessionId);\n    } catch (error) {\n      console.error('Error creating session:', error);\n    }\n  };\n  useEffect(() => {\n    startSession(); // Start a new session when the game loads\n  }, []);\n  useEffect(() => {\n    const newQuestions = Array(5).fill(null).map(() => {\n      const randomShape = shapes[Math.floor(Math.random() * shapes.length)];\n      const randomCount = Math.floor(Math.random() * 5) + 1;\n      const sequence = Array(randomCount).fill(randomShape).concat(Array(9 - randomCount).fill(null).map(() => shapes[Math.floor(Math.random() * shapes.length)]));\n      const correctAnswer = sequence.filter(s => s === randomShape).length;\n      let options = [correctAnswer];\n      while (options.length < 4) {\n        const randomOption = Math.floor(Math.random() * 5) + 1;\n        if (!options.includes(randomOption)) {\n          options.push(randomOption);\n        }\n      }\n      const shuffleArray = array => {\n        for (let i = array.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1));\n          [array[i], array[j]] = [array[j], array[i]];\n        }\n        return array;\n      };\n      return {\n        shape: randomShape,\n        sequence,\n        correctAnswer,\n        options: shuffleArray(options)\n      };\n    });\n    setQuestions(newQuestions);\n  }, []);\n  const handleAnswer = answer => {\n    if (!isAnswered) {\n      setSelectedAnswer(answer);\n      setIsAnswered(true);\n      const correctAnswer = questions[currentQuestion].correctAnswer;\n      const correct = answer === correctAnswer;\n      setIsCorrect(correct);\n      if (correct) {\n        setScore(score + 1);\n      }\n    }\n  };\n  const nextQuestion = () => {\n    setSelectedAnswer(null);\n    setIsAnswered(false);\n    setIsCorrect(null);\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setIsGameActive(false); // Stop game when questions are finished\n    }\n  };\n  const restartGame = async () => {\n    await startSession(); // Start a new session when the game restarts\n    setScore(0);\n    setCurrentQuestion(0);\n    setSelectedAnswer(null);\n    setIsAnswered(false);\n    setIsCorrect(null);\n    setIsGameActive(true); // Reactivate game and image capture\n  };\n  if (currentQuestion >= questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"game-title\",\n        children: \"Shape Counting Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result\",\n          children: [\"Your score: \", score, \" / \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"restart-btn\",\n          onClick: restartGame,\n          \"aria-label\": \"Play Again\",\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n  if (questions.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 40\n  }, this);\n  const {\n    shape,\n    sequence,\n    options\n  } = questions[currentQuestion];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"Shape Counting Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"How many \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"target-shape\",\n          children: [shape, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 30\n        }, this), \" are in the sequence?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shape-sequence\",\n        children: sequence.map((s, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `shape ${s} ${isCorrect === false ? 'sad' : ''}`,\n          \"aria-label\": `A ${s}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `smile ${isCorrect === false ? 'sad-smile' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"option-btn\",\n          onClick: () => handleAnswer(option),\n          disabled: isAnswered,\n          \"aria-label\": `Select ${option}`,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), selectedAnswer !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result\",\n          children: isCorrect ? 'Correct!' : `Wrong! The correct answer was ${questions[currentQuestion].correctAnswer}.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-btn\",\n          onClick: nextQuestion,\n          \"aria-label\": \"Next Question\",\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImageCapture, {\n      isGameActive: isGameActive,\n      sessionId: sessionId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n_s(GameComponent, \"SUuYNkFNCMP5t0JIeZTqeIbP5wY=\");\n_c = GameComponent;\nexport default GameComponent;\nvar _c;\n$RefreshReg$(_c, \"GameComponent\");","map":{"version":3,"names":["React","useState","useEffect","ImageCapture","jsxDEV","_jsxDEV","shapes","GameComponent","_s","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","score","setScore","questions","setQuestions","isAnswered","setIsAnswered","isCorrect","setIsCorrect","sessionId","setSessionId","isGameActive","setIsGameActive","startSession","response","fetch","data","json","error","console","newQuestions","Array","fill","map","randomShape","Math","floor","random","length","randomCount","sequence","concat","correctAnswer","filter","s","options","randomOption","includes","push","shuffleArray","array","i","j","shape","handleAnswer","answer","correct","nextQuestion","restartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","option","disabled","_c","$RefreshReg$"],"sources":["C:/Users/sirig/OneDrive/Desktop/ps/expression_tracker(leela)/client/src/components/GameComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './GameComponent.css';\r\nimport ImageCapture from './ImageCaptureComponent';\r\n\r\nconst shapes = ['circle', 'square', 'triangle'];\r\n\r\nfunction GameComponent() {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n    const [score, setScore] = useState(0);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [isAnswered, setIsAnswered] = useState(false);\r\n    const [isCorrect, setIsCorrect] = useState(null);\r\n    const [sessionId, setSessionId] = useState(null);\r\n    const [isGameActive, setIsGameActive] = useState(true); // Controls image capture\r\n\r\n    // Function to request a new session ID from the server\r\n    const startSession = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/start-session');\r\n            const data = await response.json();\r\n            setSessionId(data.sessionId);\r\n        } catch (error) {\r\n            console.error('Error creating session:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        startSession(); // Start a new session when the game loads\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const newQuestions = Array(5)\r\n            .fill(null)\r\n            .map(() => {\r\n                const randomShape = shapes[Math.floor(Math.random() * shapes.length)];\r\n                const randomCount = Math.floor(Math.random() * 5) + 1;\r\n                const sequence = Array(randomCount)\r\n                    .fill(randomShape)\r\n                    .concat(\r\n                        Array(9 - randomCount)\r\n                            .fill(null)\r\n                            .map(() => shapes[Math.floor(Math.random() * shapes.length)])\r\n                    );\r\n\r\n                const correctAnswer = sequence.filter((s) => s === randomShape).length;\r\n\r\n                let options = [correctAnswer];\r\n                while (options.length < 4) {\r\n                    const randomOption = Math.floor(Math.random() * 5) + 1;\r\n                    if (!options.includes(randomOption)) {\r\n                        options.push(randomOption);\r\n                    }\r\n                }\r\n\r\n                const shuffleArray = (array) => {\r\n                    for (let i = array.length - 1; i > 0; i--) {\r\n                        const j = Math.floor(Math.random() * (i + 1));\r\n                        [array[i], array[j]] = [array[j], array[i]];\r\n                    }\r\n                    return array;\r\n                };\r\n\r\n                return { shape: randomShape, sequence, correctAnswer, options: shuffleArray(options) };\r\n            });\r\n        setQuestions(newQuestions);\r\n    }, []);\r\n\r\n    const handleAnswer = (answer) => {\r\n        if (!isAnswered) {\r\n            setSelectedAnswer(answer);\r\n            setIsAnswered(true);\r\n\r\n            const correctAnswer = questions[currentQuestion].correctAnswer;\r\n            const correct = answer === correctAnswer;\r\n            setIsCorrect(correct);\r\n\r\n            if (correct) {\r\n                setScore(score + 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    const nextQuestion = () => {\r\n        setSelectedAnswer(null);\r\n        setIsAnswered(false);\r\n        setIsCorrect(null);\r\n        if (currentQuestion < questions.length - 1) {\r\n            setCurrentQuestion(currentQuestion + 1);\r\n        } else {\r\n            setIsGameActive(false); // Stop game when questions are finished\r\n        }\r\n    };\r\n\r\n    const restartGame = async () => {\r\n        await startSession(); // Start a new session when the game restarts\r\n        setScore(0);\r\n        setCurrentQuestion(0);\r\n        setSelectedAnswer(null);\r\n        setIsAnswered(false);\r\n        setIsCorrect(null);\r\n        setIsGameActive(true); // Reactivate game and image capture\r\n    };\r\n\r\n    if (currentQuestion >= questions.length) {\r\n        return (\r\n            <div className=\"app\">\r\n                <h1 className=\"game-title\">Shape Counting Game</h1>\r\n                <div className=\"game-container\">\r\n                    <p className=\"result\">Your score: {score} / {questions.length}</p>\r\n                    <button\r\n                        className=\"restart-btn\"\r\n                        onClick={restartGame}\r\n                        aria-label=\"Play Again\"\r\n                    >\r\n                        Play Again\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (questions.length === 0) return <div>Loading...</div>;\r\n\r\n    const { shape, sequence, options } = questions[currentQuestion];\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <h1 className=\"game-title\">Shape Counting Game</h1>\r\n            <div className=\"game-container\">\r\n                <h3>How many <span className=\"target-shape\">{shape}s</span> are in the sequence?</h3>\r\n                <div className=\"shape-sequence\">\r\n                    {sequence.map((s, index) => (\r\n                        <div key={index} className={`shape ${s} ${isCorrect === false ? 'sad' : ''}`} aria-label={`A ${s}`}>\r\n                            <div className={`smile ${isCorrect === false ? 'sad-smile' : ''}`}></div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-container\">\r\n                    {options.map((option, index) => (\r\n                        <button\r\n                            key={index}\r\n                            className=\"option-btn\"\r\n                            onClick={() => handleAnswer(option)}\r\n                            disabled={isAnswered}\r\n                            aria-label={`Select ${option}`}\r\n                        >\r\n                            {option}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n                {selectedAnswer !== null && (\r\n                    <div>\r\n                        <p className=\"result\">\r\n                            {isCorrect ? 'Correct!' : `Wrong! The correct answer was ${questions[currentQuestion].correctAnswer}.`}\r\n                        </p>\r\n                        <button\r\n                            className=\"next-btn\"\r\n                            onClick={nextQuestion}\r\n                            aria-label=\"Next Question\"\r\n                        >\r\n                            Next Question\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <ImageCapture isGameActive={isGameActive} sessionId={sessionId} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}