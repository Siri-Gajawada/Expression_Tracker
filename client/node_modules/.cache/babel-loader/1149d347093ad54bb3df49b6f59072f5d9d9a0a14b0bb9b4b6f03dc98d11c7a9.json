{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sirig\\\\OneDrive\\\\Desktop\\\\ps\\\\expression_tracker(proper)\\\\client\\\\src\\\\components\\\\AdminApp\\\\AdminApp.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Pie } from 'react-chartjs-2'; // Changed Bar to Pie component\n// import 'chart.js/auto'; // Import auto to handle chart.js registration\n\n// function AdminApp() {\n//   const [sessions, setSessions] = useState([]);\n//   const [selectedSession, setSelectedSession] = useState(null);\n//   const [analysisData, setAnalysisData] = useState(null);\n\n//   useEffect(() => {\n//     fetchSessions();\n//   }, []);\n\n//   const fetchSessions = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/sessions');\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n//       const data = await response.json();\n//       setSessions(data.sessions);\n//     } catch (error) {\n//       console.error('Error fetching sessions:', error);\n//     }\n//   };\n\n//   const handleSessionClick = async (sessionId) => {\n//     setSelectedSession(sessionId);\n//     try {\n//       const response = await fetch(`http://localhost:5000/analyze/${sessionId}`);\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n//       const data = await response.json();\n//       setAnalysisData(data);\n//     } catch (error) {\n//       console.error('Error analyzing session:', error);\n//     }\n//   };\n\n//   const handleBackToSessions = () => {\n//     setSelectedSession(null);\n//     setAnalysisData(null);\n//   };\n\n//   const renderTable = () => {\n//     if (!analysisData || !analysisData.imageAnalyses) return null;\n\n//     return (\n//       <div style={{ overflowX: 'auto', marginTop: '20px' }}> {/* Enable horizontal scrolling */}\n//         <table style={{ width: '100%', borderCollapse: 'collapse', border: '1px solid #ddd' }}>\n//           <thead>\n//             <tr>\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Webcam Capture</th>\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Game Screenshot</th>\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Analysis</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {analysisData.imageAnalyses.map((analysis, index) => (\n//               <tr key={index} style={{ borderBottom: '1px solid #ddd' }}>\n//                 <td style={{ border: '1px solid #ddd', padding: '12px', textAlign: 'center' }}>\n//                   <img \n//                     src={`http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath}`} \n//                     srcSet={`http://localhost:5000/uploads/webcam_images/${selectedSession}/small/${analysis.imagePath} 200w,\n//                              http://localhost:5000/uploads/webcam_images/${selectedSession}/medium/${analysis.imagePath} 400w,\n//                              http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath} 800w`}\n//                     sizes=\"(max-width: 400px) 200px, (max-width: 800px) 400px, 800px\"\n//                     alt={`Webcam ${index}`} \n//                     style={{ width: '100%', height: 'auto', borderRadius: '5px' }}\n//                     loading=\"lazy\" \n//                   />\n//                 </td>\n\n//                 <td style={{ border: '1px solid #ddd', padding: '12px', textAlign: 'center' }}>\n//                   <img \n//                     src={`http://localhost:5000/uploads/game_screenshots/${selectedSession}/screenshot_${index}.png`} \n//                     srcSet={`http://localhost:5000/uploads/game_screenshots/${selectedSession}/small/screenshot_${index}.png 200w,\n//                              http://localhost:5000/uploads/game_screenshots/${selectedSession}/medium/screenshot_${index}.png 400w,\n//                              http://localhost:5000/uploads/game_screenshots/${selectedSession}/screenshot_${index}.png 800w`}\n//                     sizes=\"(max-width: 400px) 200px, (max-width: 800px) 400px, 800px\"\n//                     alt={`Game Screenshot ${index}`} \n//                     style={{ width: '100%', height: 'auto', borderRadius: '5px' }}\n//                     loading=\"lazy\" \n//                   />\n//                 </td>\n\n//                 <td style={{ border: '1px solid #ddd', padding: '12px' }}>\n//                   {Object.entries(analysis.emotions).map(([emotion, value]) => (\n//                     <p key={emotion} style={{ margin: '5px 0' }}>{emotion}: {parseFloat(value).toFixed(2)}%</p>\n//                   ))}\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     );\n//   };\n\n//   const renderPieChart = () => {\n//     if (!analysisData || !analysisData.overallAnalysis) return null;\n\n//     const emotions = analysisData.overallAnalysis.emotions;\n//     const data = {\n//       labels: Object.keys(emotions),\n//       datasets: [{\n//         label: 'Emotion Analysis (%)',\n//         data: Object.values(emotions).map(v => parseFloat(v)),\n//         backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],\n//       }]\n//     };\n\n//     const options = {\n//       responsive: true,\n//       plugins: {\n//         legend: {\n//           position: 'top',\n//         },\n//       },\n//     };\n\n//     return (\n//       <div style={{ width: '60%', margin: '0 auto' }}>\n//         <h3 style={{ textAlign: 'center' }}>Overall Emotion Analysis</h3>\n//         <Pie data={data} options={options} />\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div style={{ padding: '20px', maxHeight: '100vh', overflowY: 'auto' }}> {/* Added maxHeight and overflowY */}\n//       <h2>Admin Dashboard</h2>\n\n//       {/* Pie Chart for Overall Emotion Analysis */}\n//       {renderPieChart()}\n\n//       <div style={{ display: 'flex', marginTop: '40px' }}>\n//         {selectedSession ? (\n//           <div style={{ width: '100%' }}>\n//             <h3>Analysis for Session: {selectedSession}</h3>\n//             {renderTable()}\n\n//             {/* Back to Sessions Button */}\n//             <button \n//               onClick={handleBackToSessions} \n//               style={{\n//                 backgroundColor: '#A2C2E2', // Pastel blue color\n//                 color: '#fff',\n//                 padding: '10px 15px',\n//                 border: 'none',\n//                 borderRadius: '5px',\n//                 cursor: 'pointer',\n//                 marginTop: '20px',\n//                 display: 'block',\n//                 marginLeft: 'auto',\n//                 marginRight: 'auto'\n//               }}\n//             >\n//               Back to Sessions\n//             </button>\n//           </div>\n//         ) : (\n//           <div style={{ width: '30%', marginRight: '20px' }}>\n//             <h3>Sessions</h3>\n//             <ul style={{ listStyleType: 'none', padding: 0 }}>\n//               {sessions.map((session) => (\n//                 <li \n//                   key={session} \n//                   onClick={() => handleSessionClick(session)}\n//                   style={{ cursor: 'pointer', padding: '10px', border: '1px solid #ddd', marginBottom: '5px' }}\n//                 >\n//                   {session}\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default AdminApp;\n\nimport React, { useState, useEffect } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport './AdminApp.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminApp() {\n  _s();\n  const [sessions, setSessions] = useState([]);\n  const [sessionDates, setSessionDates] = useState({});\n  const [selectedSession, setSelectedSession] = useState(null);\n  const [analysisData, setAnalysisData] = useState(null);\n  useEffect(() => {\n    fetchSessions();\n  }, []);\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/sessions');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setSessions(data.sessions);\n      setSessionDates(data.sessionDates || {});\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n    }\n  };\n  const handleSessionClick = async sessionId => {\n    setSelectedSession(sessionId);\n    try {\n      const response = await fetch(`http://localhost:5000/analyze/${sessionId}`);\n      if (!response.ok) {\n        if (response.status === 404) {\n          setAnalysisData({\n            imageAnalyses: [],\n            overallAnalysis: {\n              emotions: {}\n            }\n          });\n        } else {\n          throw new Error('Network response was not ok');\n        }\n      }\n      const data = await response.json();\n      setAnalysisData(data);\n    } catch (error) {\n      console.error('Error analyzing session:', error);\n    }\n  };\n  const handleBackToSessions = () => {\n    setSelectedSession(null);\n    setAnalysisData(null);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n  const renderTable = () => {\n    if (!analysisData || analysisData.imageAnalyses.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"analysis-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Webcam Capture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Game Screenshot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: analysisData.imageAnalyses.map((analysis, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath}`,\n                alt: `Webcam ${index}`,\n                className: \"webcam-image\",\n                loading: \"lazy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5000/uploads/screenshots/${selectedSession}/${analysis.imagePath}`,\n                alt: `Game Screenshot ${index}`,\n                className: \"screenshot-image\",\n                loading: \"lazy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"analysis-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Emotion Analysis:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this), Object.entries(analysis.emotions).map(([emotion, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"emotion-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [emotion, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [parseFloat(value).toFixed(2), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this)]\n              }, emotion, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dominant-emotion\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Dominant Emotion: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: analysis.dominantEmotion\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this);\n  };\n  const renderPieChart = () => {\n    if (!analysisData || !analysisData.overallAnalysis || Object.keys(analysisData.overallAnalysis.emotions).length === 0) return null;\n    const emotions = analysisData.overallAnalysis.emotions;\n    const emotionLabelsWithEmojis = {\n      happy: \"😊 Happy\",\n      sad: \"😢 Sad\",\n      angry: \"😠 Angry\",\n      surprised: \"😮 Surprised\",\n      fearful: \"😨 Fearful\",\n      neutral: \"😐 Neutral\",\n      disgust: \"🤢 Disgust\",\n      fear: \"😨 Fear\",\n      surprise: \"😯 Surprise\"\n    };\n    const data = {\n      labels: Object.keys(emotions).map(emotion => emotionLabelsWithEmojis[emotion] || emotion),\n      datasets: [{\n        data: Object.values(emotions).map(v => parseFloat(v)),\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#C9CBCF'],\n        borderWidth: 1\n      }]\n    };\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'right'\n        },\n        title: {\n          display: true\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pie-chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this);\n  };\n  const renderSessionsList = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sessions-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Local Sessions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sessions-list\",\n      children: [sessions.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sessions.map(session => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleSessionClick(session),\n          className: \"session-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: session\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this), sessionDates[session] && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Created: \", formatDate(sessionDates[session])]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 43\n          }, this)]\n        }, session, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this) : null, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Emotion Analysis Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: selectedSession ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [renderPieChart(), renderTable(), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToSessions,\n          className: \"back-to-sessions-btn\",\n          children: \"\\u2190 Back to Sessions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : renderSessionsList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminApp, \"iefCTrs6TK/b1ICg9jAI8UO5rr4=\");\n_c = AdminApp;\nexport default AdminApp;\nvar _c;\n$RefreshReg$(_c, \"AdminApp\");","map":{"version":3,"names":["React","useState","useEffect","Pie","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminApp","_s","sessions","setSessions","sessionDates","setSessionDates","selectedSession","setSelectedSession","analysisData","setAnalysisData","fetchSessions","response","fetch","ok","Error","data","json","error","console","handleSessionClick","sessionId","status","imageAnalyses","overallAnalysis","emotions","handleBackToSessions","formatDate","dateString","date","Date","toLocaleString","renderTable","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","analysis","index","src","imagePath","alt","loading","Object","entries","emotion","value","parseFloat","toFixed","dominantEmotion","renderPieChart","keys","emotionLabelsWithEmojis","happy","sad","angry","surprised","fearful","neutral","disgust","fear","surprise","labels","datasets","values","v","backgroundColor","borderWidth","options","responsive","plugins","legend","position","title","display","renderSessionsList","session","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sirig/OneDrive/Desktop/ps/expression_tracker(proper)/client/src/components/AdminApp/AdminApp.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Pie } from 'react-chartjs-2'; // Changed Bar to Pie component\r\n// import 'chart.js/auto'; // Import auto to handle chart.js registration\r\n\r\n// function AdminApp() {\r\n//   const [sessions, setSessions] = useState([]);\r\n//   const [selectedSession, setSelectedSession] = useState(null);\r\n//   const [analysisData, setAnalysisData] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     fetchSessions();\r\n//   }, []);\r\n\r\n//   const fetchSessions = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/sessions');\r\n//       if (!response.ok) {\r\n//         throw new Error('Network response was not ok');\r\n//       }\r\n//       const data = await response.json();\r\n//       setSessions(data.sessions);\r\n//     } catch (error) {\r\n//       console.error('Error fetching sessions:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleSessionClick = async (sessionId) => {\r\n//     setSelectedSession(sessionId);\r\n//     try {\r\n//       const response = await fetch(`http://localhost:5000/analyze/${sessionId}`);\r\n//       if (!response.ok) {\r\n//         throw new Error('Network response was not ok');\r\n//       }\r\n//       const data = await response.json();\r\n//       setAnalysisData(data);\r\n//     } catch (error) {\r\n//       console.error('Error analyzing session:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleBackToSessions = () => {\r\n//     setSelectedSession(null);\r\n//     setAnalysisData(null);\r\n//   };\r\n\r\n//   const renderTable = () => {\r\n//     if (!analysisData || !analysisData.imageAnalyses) return null;\r\n\r\n//     return (\r\n//       <div style={{ overflowX: 'auto', marginTop: '20px' }}> {/* Enable horizontal scrolling */}\r\n//         <table style={{ width: '100%', borderCollapse: 'collapse', border: '1px solid #ddd' }}>\r\n//           <thead>\r\n//             <tr>\r\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Webcam Capture</th>\r\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Game Screenshot</th>\r\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Analysis</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {analysisData.imageAnalyses.map((analysis, index) => (\r\n//               <tr key={index} style={{ borderBottom: '1px solid #ddd' }}>\r\n//                 <td style={{ border: '1px solid #ddd', padding: '12px', textAlign: 'center' }}>\r\n//                   <img \r\n//                     src={`http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath}`} \r\n//                     srcSet={`http://localhost:5000/uploads/webcam_images/${selectedSession}/small/${analysis.imagePath} 200w,\r\n//                              http://localhost:5000/uploads/webcam_images/${selectedSession}/medium/${analysis.imagePath} 400w,\r\n//                              http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath} 800w`}\r\n//                     sizes=\"(max-width: 400px) 200px, (max-width: 800px) 400px, 800px\"\r\n//                     alt={`Webcam ${index}`} \r\n//                     style={{ width: '100%', height: 'auto', borderRadius: '5px' }}\r\n//                     loading=\"lazy\" \r\n//                   />\r\n//                 </td>\r\n                \r\n//                 <td style={{ border: '1px solid #ddd', padding: '12px', textAlign: 'center' }}>\r\n//                   <img \r\n//                     src={`http://localhost:5000/uploads/game_screenshots/${selectedSession}/screenshot_${index}.png`} \r\n//                     srcSet={`http://localhost:5000/uploads/game_screenshots/${selectedSession}/small/screenshot_${index}.png 200w,\r\n//                              http://localhost:5000/uploads/game_screenshots/${selectedSession}/medium/screenshot_${index}.png 400w,\r\n//                              http://localhost:5000/uploads/game_screenshots/${selectedSession}/screenshot_${index}.png 800w`}\r\n//                     sizes=\"(max-width: 400px) 200px, (max-width: 800px) 400px, 800px\"\r\n//                     alt={`Game Screenshot ${index}`} \r\n//                     style={{ width: '100%', height: 'auto', borderRadius: '5px' }}\r\n//                     loading=\"lazy\" \r\n//                   />\r\n//                 </td>\r\n\r\n//                 <td style={{ border: '1px solid #ddd', padding: '12px' }}>\r\n//                   {Object.entries(analysis.emotions).map(([emotion, value]) => (\r\n//                     <p key={emotion} style={{ margin: '5px 0' }}>{emotion}: {parseFloat(value).toFixed(2)}%</p>\r\n//                   ))}\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   const renderPieChart = () => {\r\n//     if (!analysisData || !analysisData.overallAnalysis) return null;\r\n\r\n//     const emotions = analysisData.overallAnalysis.emotions;\r\n//     const data = {\r\n//       labels: Object.keys(emotions),\r\n//       datasets: [{\r\n//         label: 'Emotion Analysis (%)',\r\n//         data: Object.values(emotions).map(v => parseFloat(v)),\r\n//         backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],\r\n//       }]\r\n//     };\r\n\r\n//     const options = {\r\n//       responsive: true,\r\n//       plugins: {\r\n//         legend: {\r\n//           position: 'top',\r\n//         },\r\n//       },\r\n//     };\r\n\r\n//     return (\r\n//       <div style={{ width: '60%', margin: '0 auto' }}>\r\n//         <h3 style={{ textAlign: 'center' }}>Overall Emotion Analysis</h3>\r\n//         <Pie data={data} options={options} />\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: '20px', maxHeight: '100vh', overflowY: 'auto' }}> {/* Added maxHeight and overflowY */}\r\n//       <h2>Admin Dashboard</h2>\r\n      \r\n//       {/* Pie Chart for Overall Emotion Analysis */}\r\n//       {renderPieChart()}\r\n\r\n//       <div style={{ display: 'flex', marginTop: '40px' }}>\r\n//         {selectedSession ? (\r\n//           <div style={{ width: '100%' }}>\r\n//             <h3>Analysis for Session: {selectedSession}</h3>\r\n//             {renderTable()}\r\n            \r\n//             {/* Back to Sessions Button */}\r\n//             <button \r\n//               onClick={handleBackToSessions} \r\n//               style={{\r\n//                 backgroundColor: '#A2C2E2', // Pastel blue color\r\n//                 color: '#fff',\r\n//                 padding: '10px 15px',\r\n//                 border: 'none',\r\n//                 borderRadius: '5px',\r\n//                 cursor: 'pointer',\r\n//                 marginTop: '20px',\r\n//                 display: 'block',\r\n//                 marginLeft: 'auto',\r\n//                 marginRight: 'auto'\r\n//               }}\r\n//             >\r\n//               Back to Sessions\r\n//             </button>\r\n//           </div>\r\n//         ) : (\r\n//           <div style={{ width: '30%', marginRight: '20px' }}>\r\n//             <h3>Sessions</h3>\r\n//             <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n//               {sessions.map((session) => (\r\n//                 <li \r\n//                   key={session} \r\n//                   onClick={() => handleSessionClick(session)}\r\n//                   style={{ cursor: 'pointer', padding: '10px', border: '1px solid #ddd', marginBottom: '5px' }}\r\n//                 >\r\n//                   {session}\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminApp;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\nimport './AdminApp.css';\r\n\r\nfunction AdminApp() {\r\n  const [sessions, setSessions] = useState([]);\r\n  const [sessionDates, setSessionDates] = useState({});\r\n  const [selectedSession, setSelectedSession] = useState(null);\r\n  const [analysisData, setAnalysisData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchSessions();\r\n  }, []);\r\n\r\n  const fetchSessions = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/sessions');\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setSessions(data.sessions);\r\n      setSessionDates(data.sessionDates || {});\r\n    } catch (error) {\r\n      console.error('Error fetching sessions:', error);\r\n    }\r\n  };\r\n\r\n  const handleSessionClick = async (sessionId) => {\r\n    setSelectedSession(sessionId);\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/analyze/${sessionId}`);\r\n      if (!response.ok) {\r\n        if (response.status === 404) {\r\n          setAnalysisData({ imageAnalyses: [], overallAnalysis: { emotions: {} } });\r\n        } else {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n      }\r\n      const data = await response.json();\r\n      setAnalysisData(data);\r\n    } catch (error) {\r\n      console.error('Error analyzing session:', error);\r\n    }\r\n  };\r\n\r\n  const handleBackToSessions = () => {\r\n    setSelectedSession(null);\r\n    setAnalysisData(null);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString();\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (!analysisData || analysisData.imageAnalyses.length === 0) return null;\r\n\r\n    return (\r\n      <div className=\"table-container\">\r\n        <table className=\"analysis-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Webcam Capture</th>\r\n              <th>Game Screenshot</th>\r\n              <th>Analysis</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {analysisData.imageAnalyses.map((analysis, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  <img\r\n                    src={`http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath}`}\r\n                    alt={`Webcam ${index}`}\r\n                    className=\"webcam-image\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    src={`http://localhost:5000/uploads/screenshots/${selectedSession}/${analysis.imagePath}`}\r\n                    alt={`Game Screenshot ${index}`}\r\n                    className=\"screenshot-image\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                </td>\r\n                <td className=\"analysis-data\">\r\n                  <h4>Emotion Analysis:</h4>\r\n                  {Object.entries(analysis.emotions).map(([emotion, value]) => (\r\n                    <div key={emotion} className=\"emotion-item\">\r\n                      <span>{emotion}:</span>\r\n                      <span>{parseFloat(value).toFixed(2)}%</span>\r\n                    </div>\r\n                  ))}\r\n                  <div className=\"dominant-emotion\">\r\n                    <strong>Dominant Emotion: </strong>\r\n                    <span>{analysis.dominantEmotion}</span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderPieChart = () => {\r\n    if (!analysisData || !analysisData.overallAnalysis || Object.keys(analysisData.overallAnalysis.emotions).length === 0) return null;\r\n\r\n    const emotions = analysisData.overallAnalysis.emotions;\r\n    const emotionLabelsWithEmojis = {\r\n      happy: \"😊 Happy\",\r\n      sad: \"😢 Sad\",\r\n      angry: \"😠 Angry\",\r\n      surprised: \"😮 Surprised\",\r\n      fearful: \"😨 Fearful\",\r\n      neutral: \"😐 Neutral\",\r\n      disgust: \"🤢 Disgust\",\r\n      fear: \"😨 Fear\",\r\n      surprise: \"😯 Surprise\"\r\n    };\r\n\r\n    const data = {\r\n      labels: Object.keys(emotions).map((emotion) => emotionLabelsWithEmojis[emotion] || emotion),\r\n      datasets: [\r\n        {\r\n          data: Object.values(emotions).map((v) => parseFloat(v)),\r\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#C9CBCF'],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const options = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: 'right',\r\n        },\r\n        title: {\r\n          display: true,\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div className=\"pie-chart-container\">\r\n        <Pie data={data} options={options} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderSessionsList = () => (\r\n    <div className=\"sessions-list-container\">\r\n      <h3>Local Sessions</h3>\r\n      <div className=\"sessions-list\">\r\n        {sessions.length > 0 ? (\r\n          <ul>\r\n            {sessions.map((session) => (\r\n              <li key={session} onClick={() => handleSessionClick(session)} className=\"session-item\">\r\n                <div>{session}</div>\r\n                {sessionDates[session] && <div>Created: {formatDate(sessionDates[session])}</div>}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : null} {/* Do not display anything if sessions array is empty */}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"admin-app-container\">\r\n      <h2>Emotion Analysis Dashboard</h2>\r\n      <div className=\"content-container\">\r\n        {selectedSession ? (\r\n          <>\r\n            {renderPieChart()}\r\n            {renderTable()}\r\n            <button onClick={handleBackToSessions} className=\"back-to-sessions-btn\">\r\n              ← Back to Sessions\r\n            </button>\r\n          </>\r\n        ) : (\r\n          renderSessionsList()\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminApp;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,eAAe;AACtB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACa,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}