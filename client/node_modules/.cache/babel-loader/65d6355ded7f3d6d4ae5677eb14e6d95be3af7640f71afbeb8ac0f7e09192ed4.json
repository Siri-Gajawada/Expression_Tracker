{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import html2canvas from'html2canvas';import{uploadImages}from'../services/api.js';// Assuming your API utility\nimport{jsx as _jsx}from\"react/jsx-runtime\";const ImageCapture=_ref=>{let{sessionId,isActive}=_ref;const[screenshot,setScreenshot]=useState(null);const[webcamImage,setWebcamImage]=useState(null);const videoRef=useRef(null);const capturingRef=useRef(false);const streamRef=useRef(null);// Function to capture a screenshot\nconst captureScreenshot=async()=>{try{const canvas=await html2canvas(document.body);// Capture the current view\ncanvas.toBlob(blob=>{const file=new File([blob],'screenshot.png',{type:'image/png'});setScreenshot(file);},'image/png');}catch(error){console.error('Error capturing screenshot:',error);}};// Function to capture webcam image\nconst captureWebcamImage=()=>{if(videoRef.current){const canvas=document.createElement('canvas');canvas.width=videoRef.current.videoWidth;canvas.height=videoRef.current.videoHeight;const ctx=canvas.getContext('2d');ctx.drawImage(videoRef.current,0,0,canvas.width,canvas.height);canvas.toBlob(blob=>{const file=new File([blob],'webcam.png',{type:'image/png'});setWebcamImage(file);},'image/png');}};// Single capture handler to avoid multiple triggers\nconst captureImages=()=>{if(!capturingRef.current&&isActive){capturingRef.current=true;captureScreenshot();captureWebcamImage();setTimeout(()=>{capturingRef.current=false;},1000);}};// Upload images when both are ready\nuseEffect(()=>{const upload=async()=>{if(screenshot&&webcamImage&&sessionId){try{await uploadImages(screenshot,webcamImage,sessionId);console.log('Images uploaded successfully');setScreenshot(null);setWebcamImage(null);}catch(error){console.error('Error uploading images:',error);}}};upload();},[screenshot,webcamImage,sessionId]);// Start/stop webcam based on isActive prop\nuseEffect(()=>{const startWebcam=async()=>{if(isActive){try{const stream=await navigator.mediaDevices.getUserMedia({video:true});streamRef.current=stream;if(videoRef.current){videoRef.current.srcObject=stream;}}catch(error){console.error('Error accessing webcam:',error);}}};const stopWebcam=()=>{if(streamRef.current){const tracks=streamRef.current.getTracks();tracks.forEach(track=>track.stop());streamRef.current=null;if(videoRef.current){videoRef.current.srcObject=null;}}};if(isActive){startWebcam();}else{stopWebcam();}return()=>{stopWebcam();};},[isActive]);// Periodically capture images\nuseEffect(()=>{let intervalId;if(isActive){intervalId=setInterval(()=>{captureImages();},5000);// Adjust interval as needed\n}return()=>{if(intervalId){clearInterval(intervalId);}};},[isActive]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"video\",{ref:videoRef,autoPlay:true,style:{display:'none'},crossOrigin:\"anonymous\"})});};export default ImageCapture;","map":{"version":3,"names":["React","useEffect","useState","useRef","html2canvas","uploadImages","jsx","_jsx","ImageCapture","_ref","sessionId","isActive","screenshot","setScreenshot","webcamImage","setWebcamImage","videoRef","capturingRef","streamRef","captureScreenshot","canvas","document","body","toBlob","blob","file","File","type","error","console","captureWebcamImage","current","createElement","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","captureImages","setTimeout","upload","log","startWebcam","stream","navigator","mediaDevices","getUserMedia","video","srcObject","stopWebcam","tracks","getTracks","forEach","track","stop","intervalId","setInterval","clearInterval","children","ref","autoPlay","style","display","crossOrigin"],"sources":["C:/Users/sirig/OneDrive/Desktop/ps/expression_tracker(proper)/client/src/components/ImageCaptureComponent.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport html2canvas from 'html2canvas';\r\nimport { uploadImages } from '../services/api.js'; // Assuming your API utility\r\n\r\nconst ImageCapture = ({ sessionId, isActive }) => {\r\n  const [screenshot, setScreenshot] = useState(null);\r\n  const [webcamImage, setWebcamImage] = useState(null);\r\n  const videoRef = useRef(null);\r\n  const capturingRef = useRef(false);\r\n  const streamRef = useRef(null);\r\n\r\n  // Function to capture a screenshot\r\n  const captureScreenshot = async () => {\r\n    try {\r\n      const canvas = await html2canvas(document.body); // Capture the current view\r\n      canvas.toBlob((blob) => {\r\n        const file = new File([blob], 'screenshot.png', { type: 'image/png' });\r\n        setScreenshot(file);\r\n      }, 'image/png');\r\n    } catch (error) {\r\n      console.error('Error capturing screenshot:', error);\r\n    }\r\n  };\r\n\r\n  // Function to capture webcam image\r\n  const captureWebcamImage = () => {\r\n    if (videoRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = videoRef.current.videoWidth;\r\n      canvas.height = videoRef.current.videoHeight;\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\r\n      canvas.toBlob((blob) => {\r\n        const file = new File([blob], 'webcam.png', { type: 'image/png' });\r\n        setWebcamImage(file);\r\n      }, 'image/png');\r\n    }\r\n  };\r\n\r\n  // Single capture handler to avoid multiple triggers\r\n  const captureImages = () => {\r\n    if (!capturingRef.current && isActive) {\r\n      capturingRef.current = true;\r\n      captureScreenshot();\r\n      captureWebcamImage();\r\n      setTimeout(() => {\r\n        capturingRef.current = false;\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  // Upload images when both are ready\r\n  useEffect(() => {\r\n    const upload = async () => {\r\n      if (screenshot && webcamImage && sessionId) {\r\n        try {\r\n          await uploadImages(screenshot, webcamImage, sessionId);\r\n          console.log('Images uploaded successfully');\r\n          setScreenshot(null);\r\n          setWebcamImage(null);\r\n        } catch (error) {\r\n          console.error('Error uploading images:', error);\r\n        }\r\n      }\r\n    };\r\n    upload();\r\n  }, [screenshot, webcamImage, sessionId]);\r\n\r\n  // Start/stop webcam based on isActive prop\r\n  useEffect(() => {\r\n    const startWebcam = async () => {\r\n      if (isActive) {\r\n        try {\r\n          const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n          streamRef.current = stream;\r\n          if (videoRef.current) {\r\n            videoRef.current.srcObject = stream;\r\n          }\r\n        } catch (error) {\r\n          console.error('Error accessing webcam:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    const stopWebcam = () => {\r\n      if (streamRef.current) {\r\n        const tracks = streamRef.current.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n        streamRef.current = null;\r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = null;\r\n        }\r\n      }\r\n    };\r\n\r\n    if (isActive) {\r\n      startWebcam();\r\n    } else {\r\n      stopWebcam();\r\n    }\r\n\r\n    return () => {\r\n      stopWebcam();\r\n    };\r\n  }, [isActive]);\r\n\r\n  // Periodically capture images\r\n  useEffect(() => {\r\n    let intervalId;\r\n\r\n    if (isActive) {\r\n      intervalId = setInterval(() => {\r\n        captureImages();\r\n      }, 5000); // Adjust interval as needed\r\n    }\r\n\r\n    return () => {\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n    };\r\n  }, [isActive]);\r\n\r\n  return(\r\n    <div>\r\n      <video ref={videoRef} autoPlay style={{ display: 'none' }} crossOrigin=\"anonymous\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCapture;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}